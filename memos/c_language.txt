

★　C　言語について

-------------------------------------------------------------

◎　ルール
　　1．C言語は大文字、小文字を区別する
　　2．文末は;
　　3．main関数が最初に動作する
　　4．コメント　/* */ 
　　5．改行は\n
　　6．使える数字は10進数、8進数、16進数
  　　　8進数　 ➡　先頭に　0　0152（10進数で106）
   　　 16進数　➡　先頭に　0x　0xFF（
　　7．変数宣言は関数の頭でしかできない
　　8．省略演算子（+=, -=, *=, /=, $=）、インクリメントデクリメント（++, --）は使える
　　9．型の種類（int　整数、double　実数



-------------------------------------------------------------

★　関数

  ◎　#include <stdio.h>
      ・printf()



-------------------------------------------------------------

★　用語

・アセンブラ
　低級言語。コンピュータが理解できる言語でマシン語（機械語）のこと。
 
・コンパイル
　プログラミング言語を機械語に翻訳すること。翻訳する機能を持つものをコンパイラという。
　コンパイラの3段階の動作
　1．プリプロセッサというソフトが文字列の調整（空白や改行の結合、記号の置き換えなど）を行い、プログラムを解析しやすくする。
　2．コンパイラがコンパイルする。この時に最適化（より高速に動作するように工夫してマシン語に翻訳する機能）を行う。
　3．翻訳した機械語プログラムがリンカというソフトによって結合（リンク）され、マシン語のデータが実行可能ファイル（EXEファイル）になる。

・インタプリタ
　プログラムを読み込むと同時に翻訳する機能のこと。
 
・擬似命令
　プログラムコードではなく、機械語に翻訳されずその前段階で処理される。
　#includeはprintf関数などの準備をするための命令。

・エスケープシーケンス
　画面に表示できない制御を行うために使われる特殊文字。
　改行　➡　\n
　タブ　➡　\t

・数値と数字
　数値は数を表現するもので計算に使える。
　数字は見た目は同じだが、数を表現するものではなく、計算に使えない。

・文字列リテラル
　"”で囲われた文字定数。
 
・整数と実数
　整数は自然数に0と負の数を加えた数のこと。
　実数は整数に小数値を加えた数のこと。

・浮動小数点方式
　実数値を数値の並び（仮数部）と小数点の位置（指数部）で表す方法。

・出力変換指定子
　外部のデータを文字列に変換して表示したい時にその変換方法を指定する記号。
　整数値を文字列に変換する　➡　%d　指定子
　　例：printf("%d+%d=%d\n", 100, 200, 300);
   桁数を指定する　➡　%桁数d
    例：printf("%5d", 500);  // 空白→  500
   空白を0にする　➡　%0桁数d
    例：printf("%5d", 500);  // 00500
   実数値の桁をそろえる　➡　%全体桁数.少数桁数f  全体桁数は少数の桁数と小数点を含む
    例：printf("%6.2f", 3.14159);  // 3.14
  実数値を数字に変換する　　➡　%f　指定子
　　例：printf("%f\n", 10.0 + 3.0);   // 13.00
       printf("%f\n", 10.0 - 3.0);   // 7.00
       printf("%f\n", 10.0 * 3.0);   // 30.000
       printf("%f\n", 10.0 / 3.0);   // 3.3333
       
・キャスト変換
　強制的に型を変換する機能。
　型の記載例：
  （変換する型）数値や変数名
　　(int)(1.05 * 360)); // 378
